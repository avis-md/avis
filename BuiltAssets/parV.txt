#version 330 core

layout(location=0) in vec3 pos;
layout(location=1) in vec3 col;

uniform mat4 _MV, _P;
uniform vec3 camPos;
uniform vec3 camFwd;

uniform vec2 screenSize;
uniform samplerBuffer radTex;
uniform float radScl;

flat out int v2f_id;
out vec3 v2f_pos;
out float v2f_scl;
out float v2f_rad;

void main(){
    vec4 wpos = _MV*vec4(pos, 1);
    wpos /= wpos.w;
    gl_Position = _P*wpos;
    v2f_pos = wpos.xyz;
    v2f_id = gl_VertexID + 1;
	v2f_rad = 0.1 * texelFetch(radTex,gl_VertexID).r * radScl;
	
	vec4 unitVec = _MV*vec4(1, 0, 0, 0);
	v2f_scl = length(unitVec);
    
    vec3 wdir = wpos.xyz - camPos;
    float z = length(wdir);
    float ca = dot(normalize(wpos.xyz - camPos), camFwd);
	float z2 = z * ca;
	gl_PointSize = v2f_scl * v2f_rad * 2 * screenSize.x / z2;
	if (z < 0.1) gl_PointSize = 0;
}