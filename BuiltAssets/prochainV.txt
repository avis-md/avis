#version 330 core

uniform mat4 _MV, _P;
uniform samplerBuffer poss;
uniform usamplerBuffer ids;
uniform int chainSz;
uniform int chainReso;
uniform int loopReso;

vec3 bezier(vec3 a, vec3 b, vec3 c, vec3 d, float t) {
    vec3 q = mix(a, b, t);
    vec3 r = mix(b, c, t);
    vec3 s = mix(c, d, t);
    vec3 u = mix(q, r, t);
    vec3 v = mix(r, s, t);
    return mix(u, v, t);
}

void main() {
    int loop = gl_VertexID / 6 * loopReso;
    int par = loop / res;
    vec3 p1 = texelFetch(poss, texelFetch(ids, par).r);
    vec3 p2 = texelFetch(poss, texelFetch(ids, par + 1).r);
    vec3 h1 = mix(p1, p2, 0.33);
    vec3 h2 = mix(p1, p2, 0.67);
    vec3 p1o = p1;
    if (par > 0) {
        vec3 p0 = texelFetch(poss, texelFetch(ids, par - 1).r);
        p1 = mix(p1, mix(p0, p2, 0.5), 0.33);
    }
    else if (par < chainSz - 1) {
        vec3 p3 = texelFetch(poss, texelFetch(ids, par + 2).r);
        p2 = mix(p2, mix(p1o, p3, 0.5), 0.33);
    }
    float t = float(loop) / res;
    if (mod(gl_VertexID, 2) > 0) t += 1/res;

    vec3 pos0 = bezier(p1, h1, h2, p2);
    gl_Position = _P * _MV * vec4(pos0, 1);
}