#version 330

uniform mat4 _IP;
uniform vec2 screenSize;
uniform sampler2D inNormal;
uniform sampler2D inDepth;

uniform sampler2DShadow lDepth;
uniform float lBias;
uniform float lStrength;
uniform vec3 lPos;
uniform float ldScl;
uniform mat4 _LD;

out vec4 fragCol;

void main () {
	vec2 uv = gl_FragCoord.xy / screenSize;
	vec4 nCol = texture(inNormal, uv);
	float z = texture(inDepth, uv).x;
	
	vec4 dc = vec4(uv.x*2-1, uv.y*2-1, z*2-1, 1);
	vec4 wPos = _IP*dc;
	wPos *= ceil(1-z) / wPos.w; //world position
	
	vec4 cpos = _LD*wPos;
	cpos /= cpos.w;
	
	cpos.z = cpos.z * 0.5 + 0.5 - lBias;
	//float d1 = texture(lDepth, vec3(cpos.x*0.5 + 0.5, (cpos.y*0.5 + 0.5)) * ldScl).x;
	//float d2 = cpos.z*0.5 + 0.5;
	float notShadow = texture(lDepth, vec3((cpos.x*0.5 + 0.5) * ldScl, (cpos.y*0.5 + 0.5) * ldScl, cpos.z));
	//notShadow = min(notShadow, max(dot(nCol.xyz, normalize(lPos - wPos.xyz)), 0));
	if (dot(nCol.xyz, normalize(lPos - wPos.xyz)) < 0) notShadow = 0;
    //fragCol = vec4(vec3(1,1,1)*lStrength * (1-notShadow), 0);
	fragCol = vec4(0, 0, 0, lStrength * (1-notShadow));
	//fragCol = vec4(texture(lDepth, uv).x * 300, 0, 0, 1);
}