#version 330

uniform mat4 _IP;
uniform vec2 screenSize;
uniform sampler2D inNormal;
uniform sampler2D inDepth;

uniform sampler2D lDepth;
uniform float lBias;
uniform float lStrength;
uniform mat4 _LD;

out vec4 fragCol;

void main () {
	vec2 uv = gl_FragCoord.xy / screenSize;
	vec4 nCol = texture(inNormal, uv);
	float z = texture(inDepth, uv).x;
	
	vec4 dc = vec4(uv.x*2-1, uv.y*2-1, z*2-1, 1);
	vec4 wPos = _IP*dc;
	wPos *= ceil(1-z) / wPos.w; //world position
	
	vec4 cpos = _LD*wPos;
	cpos /= cpos.w;
	
	float d1 = texture(lDepth, vec2(cpos.x*0.5 + 0.5, (cpos.y*0.5 + 0.5))).x;
	float d2 = cpos.z*0.5 + 0.5;
	float notShadow = clamp(ceil((d1 - d2) + lBias), 0, 1);
	notShadow = mix(1, notShadow, lStrength);
    //fragCol = vec4(notShadow, 0, 0, 1);2.0 * z_b - 1.0;
    float zz = texture(lDepth, uv).x;
    //zz = zz * 2 - 1;
    float zNear = 0.01;
    float zFar = 500;
    //zz = 2.0 * zNear * zFar / (zFar + zNear - zz * (zFar - zNear));
    fragCol = vec4(zz, floor(zz), 0, 1);
}